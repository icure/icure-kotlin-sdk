/**
 * iCure Data Stack API Documentation
 *
 * The iCure Data Stack Application API is the native interface to iCure. This version is obsolete, please use v2.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
package io.icure.kraken.client.models

import io.icure.kraken.client.models.IngredientDto
import io.icure.kraken.client.models.PharmaceuticalFormStubDto
import io.icure.kraken.client.models.RouteOfAdministrationDto
import io.icure.kraken.client.models.SamTextDto

import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
import com.github.pozo.KotlinBuilder


/**
 * 
 *
 * @param from 
 * @param to 
 * @param ingredients 
 * @param pharmaceuticalForms 
 * @param routeOfAdministrations 
 * @param dividable 
 * @param scored 
 * @param crushable 
 * @param containsAlcohol 
 * @param sugarFree 
 * @param modifiedReleaseType 
 * @param specificDrugDevice 
 * @param dimensions 
 * @param name 
 * @param note 
 */

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@KotlinBuilder
data class AmpComponentDto (

    @field:JsonProperty("from")
    val from: kotlin.Long? = null,

    @field:JsonProperty("to")
    val to: kotlin.Long? = null,

    @field:JsonProperty("ingredients")
    val ingredients: kotlin.collections.List<IngredientDto>? = null,

    @field:JsonProperty("pharmaceuticalForms")
    val pharmaceuticalForms: kotlin.collections.List<PharmaceuticalFormStubDto>? = null,

    @field:JsonProperty("routeOfAdministrations")
    val routeOfAdministrations: kotlin.collections.List<RouteOfAdministrationDto>? = null,

    @field:JsonProperty("dividable")
    val dividable: kotlin.String? = null,

    @field:JsonProperty("scored")
    val scored: kotlin.String? = null,

    @field:JsonProperty("crushable")
    val crushable: AmpComponentDto.Crushable? = null,

    @field:JsonProperty("containsAlcohol")
    val containsAlcohol: AmpComponentDto.ContainsAlcohol? = null,

    @field:JsonProperty("sugarFree")
    val sugarFree: kotlin.Boolean? = null,

    @field:JsonProperty("modifiedReleaseType")
    val modifiedReleaseType: kotlin.Int? = null,

    @field:JsonProperty("specificDrugDevice")
    val specificDrugDevice: kotlin.Int? = null,

    @field:JsonProperty("dimensions")
    val dimensions: kotlin.String? = null,

    @field:JsonProperty("name")
    val name: SamTextDto? = null,

    @field:JsonProperty("note")
    val note: SamTextDto? = null

) {

    /**
     * 
     *
     * Values: y,n,x
     */
    enum class Crushable(val value: kotlin.String) {
        @JsonProperty(value = "Y") y("Y"),
        @JsonProperty(value = "N") n("N"),
        @JsonProperty(value = "X") x("X");
    }
    /**
     * 
     *
     * Values: y,n,x
     */
    enum class ContainsAlcohol(val value: kotlin.String) {
        @JsonProperty(value = "Y") y("Y"),
        @JsonProperty(value = "N") n("N"),
        @JsonProperty(value = "X") x("X");
    }
}

