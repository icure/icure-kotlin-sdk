/**
 * iCure Cloud API Documentation
 *
 * Spring shop sample application
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
package io.icure.kraken.client.models

import io.icure.kraken.client.models.ReimbursementDto

import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
import com.github.pozo.KotlinBuilder


/**
 * 
 *
 * @param id 
 * @param from 
 * @param to 
 * @param deliveryEnvironment 
 * @param code 
 * @param codeType 
 * @param price 
 * @param cheap 
 * @param cheapest 
 * @param reimbursable 
 * @param reimbursements 
 * @param productId 
 */

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@KotlinBuilder
data class DmppDto (

    @field:JsonProperty("id")
    val id: kotlin.String? = null,

    @field:JsonProperty("from")
    val from: kotlin.Long? = null,

    @field:JsonProperty("to")
    val to: kotlin.Long? = null,

    @field:JsonProperty("deliveryEnvironment")
    val deliveryEnvironment: DmppDto.DeliveryEnvironment? = null,

    @field:JsonProperty("code")
    val code: kotlin.String? = null,

    @field:JsonProperty("codeType")
    val codeType: DmppDto.CodeType? = null,

    @field:JsonProperty("price")
    val price: kotlin.String? = null,

    @field:JsonProperty("cheap")
    val cheap: kotlin.Boolean? = null,

    @field:JsonProperty("cheapest")
    val cheapest: kotlin.Boolean? = null,

    @field:JsonProperty("reimbursable")
    val reimbursable: kotlin.Boolean? = null,

    @field:JsonProperty("reimbursements")
    val reimbursements: kotlin.collections.List<ReimbursementDto>? = null,

    @field:JsonProperty("productId")
    val productId: kotlin.String? = null

) {

    /**
     * 
     *
     * Values: p,a,h,r
     */
    enum class DeliveryEnvironment(val value: kotlin.String) {
        @JsonProperty(value = "P") p("P"),
        @JsonProperty(value = "A") a("A"),
        @JsonProperty(value = "H") h("H"),
        @JsonProperty(value = "R") r("R");
    }
    /**
     * 
     *
     * Values: cNK,pSEUDO
     */
    enum class CodeType(val value: kotlin.String) {
        @JsonProperty(value = "CNK") cNK("CNK"),
        @JsonProperty(value = "PSEUDO") pSEUDO("PSEUDO");
    }
}

