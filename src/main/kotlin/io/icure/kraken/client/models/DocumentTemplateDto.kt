/**
 * iCure Data Stack API Documentation
 *
 * The iCure Data Stack Application API is the native interface to iCure. This version is obsolete, please use v2.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
package io.icure.kraken.client.models

import io.icure.kraken.client.models.CodeStubDto
import io.icure.kraken.client.models.DocumentGroupDto

import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
import com.github.pozo.KotlinBuilder


/**
 * 
 *
 * @param id 
 * @param tags A tag is an item from a codification system that qualifies an entity as being member of a certain class, whatever the value it might have taken. If the tag qualifies the content of a field, it means that whatever the content of the field, the tag will always apply. For example, the label of a field is qualified using a tag. LOINC is a codification system typically used for tags.
 * @param codes A code is an item from a codification system that qualifies the content of this entity. SNOMED-CT, ICPC-2 or ICD-10 codifications systems can be used for codes
 * @param otherUtis 
 * @param rev 
 * @param created The timestamp (unix epoch in ms) of creation of this entity, will be filled automatically if missing. Not enforced by the application server.
 * @param modified The date (unix epoch in ms) of the latest modification of this entity, will be filled automatically if missing. Not enforced by the application server.
 * @param author The id of the User that has created this entity, will be filled automatically if missing. Not enforced by the application server.
 * @param responsible The id of the HealthcareParty that is responsible for this entity, will be filled automatically if missing. Not enforced by the application server.
 * @param medicalLocationId The id of the medical location where this entity was created.
 * @param endOfLife Soft delete (unix epoch in ms) timestamp of the object.
 * @param deletionDate hard delete (unix epoch in ms) timestamp of the object. Filled automatically when deletePatient is called.
 * @param attachment 
 * @param documentType The type of document, ex: admission, clinical path, document report,invoice, etc.
 * @param mainUti 
 * @param name 
 * @param attachmentId 
 * @param version 
 * @param owner 
 * @param guid 
 * @param group 
 * @param descr 
 * @param disabled 
 * @param specialty 
 */

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@KotlinBuilder
data class DocumentTemplateDto (

    @field:JsonProperty("id")
    val id: kotlin.String,

    /* A tag is an item from a codification system that qualifies an entity as being member of a certain class, whatever the value it might have taken. If the tag qualifies the content of a field, it means that whatever the content of the field, the tag will always apply. For example, the label of a field is qualified using a tag. LOINC is a codification system typically used for tags. */
    @field:JsonProperty("tags")
    val tags: kotlin.collections.List<CodeStubDto> = listOf(),

    /* A code is an item from a codification system that qualifies the content of this entity. SNOMED-CT, ICPC-2 or ICD-10 codifications systems can be used for codes */
    @field:JsonProperty("codes")
    val codes: kotlin.collections.List<CodeStubDto> = listOf(),

    @field:JsonProperty("otherUtis")
    val otherUtis: kotlin.collections.List<kotlin.String> = listOf(),

    @field:JsonProperty("rev")
    val rev: kotlin.String? = null,

    /* The timestamp (unix epoch in ms) of creation of this entity, will be filled automatically if missing. Not enforced by the application server. */
    @field:JsonProperty("created")
    val created: kotlin.Long? = null,

    /* The date (unix epoch in ms) of the latest modification of this entity, will be filled automatically if missing. Not enforced by the application server. */
    @field:JsonProperty("modified")
    val modified: kotlin.Long? = null,

    /* The id of the User that has created this entity, will be filled automatically if missing. Not enforced by the application server. */
    @field:JsonProperty("author")
    val author: kotlin.String? = null,

    /* The id of the HealthcareParty that is responsible for this entity, will be filled automatically if missing. Not enforced by the application server. */
    @field:JsonProperty("responsible")
    val responsible: kotlin.String? = null,

    /* The id of the medical location where this entity was created. */
    @field:JsonProperty("medicalLocationId")
    val medicalLocationId: kotlin.String? = null,

    /* Soft delete (unix epoch in ms) timestamp of the object. */
    @field:JsonProperty("endOfLife")
    val endOfLife: kotlin.Long? = null,

    /* hard delete (unix epoch in ms) timestamp of the object. Filled automatically when deletePatient is called. */
    @field:JsonProperty("deletionDate")
    val deletionDate: kotlin.Long? = null,

    @field:JsonProperty("attachment")
    val attachment: kotlin.ByteArray? = null,

    /* The type of document, ex: admission, clinical path, document report,invoice, etc. */
    @field:JsonProperty("documentType")
    val documentType: DocumentTemplateDto.DocumentType? = null,

    @field:JsonProperty("mainUti")
    val mainUti: kotlin.String? = null,

    @field:JsonProperty("name")
    val name: kotlin.String? = null,

    @field:JsonProperty("attachmentId")
    val attachmentId: kotlin.String? = null,

    @field:JsonProperty("version")
    val version: DocumentTemplateDto.Version? = null,

    @field:JsonProperty("owner")
    val owner: kotlin.String? = null,

    @field:JsonProperty("guid")
    val guid: kotlin.String? = null,

    @field:JsonProperty("group")
    val group: DocumentGroupDto? = null,

    @field:JsonProperty("descr")
    val descr: kotlin.String? = null,

    @field:JsonProperty("disabled")
    val disabled: kotlin.String? = null,

    @field:JsonProperty("specialty")
    val specialty: CodeStubDto? = null

) {

    /**
     * The type of document, ex: admission, clinical path, document report,invoice, etc.
     *
     * Values: admission,alert,bvtSample,clinicalpath,clinicalsummary,contactreport,quote,invoice,death,discharge,dischargereport,ebirthBabyMedicalform,ebirthBabyNotification,ebirthMotherMedicalform,ebirthMotherNotification,ecareSafeConsultation,epidemiology,intervention,labrequest,labresult,medicaladvisoragreement,medicationschemeelement,note,notification,pharmaceuticalprescription,prescription,productdelivery,quickdischargereport,radiationexposuremonitoring,referral,report,request,result,sumehr,telemonitoring,template,templateAdmin,treatmentsuspension,vaccination
     */
    enum class DocumentType(val value: kotlin.String) {
        @JsonProperty(value = "admission") admission("admission"),
        @JsonProperty(value = "alert") alert("alert"),
        @JsonProperty(value = "bvt_sample") bvtSample("bvt_sample"),
        @JsonProperty(value = "clinicalpath") clinicalpath("clinicalpath"),
        @JsonProperty(value = "clinicalsummary") clinicalsummary("clinicalsummary"),
        @JsonProperty(value = "contactreport") contactreport("contactreport"),
        @JsonProperty(value = "quote") quote("quote"),
        @JsonProperty(value = "invoice") invoice("invoice"),
        @JsonProperty(value = "death") death("death"),
        @JsonProperty(value = "discharge") discharge("discharge"),
        @JsonProperty(value = "dischargereport") dischargereport("dischargereport"),
        @JsonProperty(value = "ebirth_baby_medicalform") ebirthBabyMedicalform("ebirth_baby_medicalform"),
        @JsonProperty(value = "ebirth_baby_notification") ebirthBabyNotification("ebirth_baby_notification"),
        @JsonProperty(value = "ebirth_mother_medicalform") ebirthMotherMedicalform("ebirth_mother_medicalform"),
        @JsonProperty(value = "ebirth_mother_notification") ebirthMotherNotification("ebirth_mother_notification"),
        @JsonProperty(value = "ecare_safe_consultation") ecareSafeConsultation("ecare_safe_consultation"),
        @JsonProperty(value = "epidemiology") epidemiology("epidemiology"),
        @JsonProperty(value = "intervention") intervention("intervention"),
        @JsonProperty(value = "labrequest") labrequest("labrequest"),
        @JsonProperty(value = "labresult") labresult("labresult"),
        @JsonProperty(value = "medicaladvisoragreement") medicaladvisoragreement("medicaladvisoragreement"),
        @JsonProperty(value = "medicationschemeelement") medicationschemeelement("medicationschemeelement"),
        @JsonProperty(value = "note") note("note"),
        @JsonProperty(value = "notification") notification("notification"),
        @JsonProperty(value = "pharmaceuticalprescription") pharmaceuticalprescription("pharmaceuticalprescription"),
        @JsonProperty(value = "prescription") prescription("prescription"),
        @JsonProperty(value = "productdelivery") productdelivery("productdelivery"),
        @JsonProperty(value = "quickdischargereport") quickdischargereport("quickdischargereport"),
        @JsonProperty(value = "radiationexposuremonitoring") radiationexposuremonitoring("radiationexposuremonitoring"),
        @JsonProperty(value = "referral") referral("referral"),
        @JsonProperty(value = "report") report("report"),
        @JsonProperty(value = "request") request("request"),
        @JsonProperty(value = "result") result("result"),
        @JsonProperty(value = "sumehr") sumehr("sumehr"),
        @JsonProperty(value = "telemonitoring") telemonitoring("telemonitoring"),
        @JsonProperty(value = "template") template("template"),
        @JsonProperty(value = "template_admin") templateAdmin("template_admin"),
        @JsonProperty(value = "treatmentsuspension") treatmentsuspension("treatmentsuspension"),
        @JsonProperty(value = "vaccination") vaccination("vaccination");
    }
    /**
     * 
     *
     * Values: v100
     */
    enum class Version(val value: kotlin.String) {
        @JsonProperty(value = "V1_0_0") v100("V1_0_0");
    }
}

