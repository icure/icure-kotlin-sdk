/**
 * iCure Data Stack API Documentation
 *
 * The iCure Data Stack Application API is the native interface to iCure. This version is obsolete, please use v2.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
package io.icure.kraken.client.models

import io.icure.kraken.client.models.InvoiceItem
import io.icure.kraken.client.models.PatientDto

import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
import com.github.pozo.KotlinBuilder


/**
 * 
 *
 * @param items 
 * @param ignorePrescriptionDate 
 * @param hospitalisedPatient 
 * @param creditNote 
 * @param patient 
 * @param ioCode 
 * @param reason 
 * @param invoiceRef 
 * @param invoiceNumber 
 * @param relatedInvoiceIoCode 
 * @param relatedInvoiceNumber 
 * @param relatedBatchSendNumber 
 * @param relatedBatchYearMonth 
 */

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@KotlinBuilder
data class EfactInvoice (

    @field:JsonProperty("items")
    val items: kotlin.collections.List<InvoiceItem> = emptyList(),

    @field:JsonProperty("ignorePrescriptionDate")
    val ignorePrescriptionDate: kotlin.Boolean,

    @field:JsonProperty("hospitalisedPatient")
    val hospitalisedPatient: kotlin.Boolean,

    @field:JsonProperty("creditNote")
    val creditNote: kotlin.Boolean,

    @field:JsonProperty("patient")
    val patient: PatientDto? = null,

    @field:JsonProperty("ioCode")
    val ioCode: kotlin.String? = null,

    @field:JsonProperty("reason")
    val reason: EfactInvoice.Reason? = null,

    @field:JsonProperty("invoiceRef")
    val invoiceRef: kotlin.String? = null,

    @field:JsonProperty("invoiceNumber")
    val invoiceNumber: kotlin.Long? = null,

    @field:JsonProperty("relatedInvoiceIoCode")
    val relatedInvoiceIoCode: kotlin.String? = null,

    @field:JsonProperty("relatedInvoiceNumber")
    val relatedInvoiceNumber: kotlin.Long? = null,

    @field:JsonProperty("relatedBatchSendNumber")
    val relatedBatchSendNumber: kotlin.Long? = null,

    @field:JsonProperty("relatedBatchYearMonth")
    val relatedBatchYearMonth: kotlin.Long? = null

) {

    /**
     * 
     *
     * Values: chimiotherapy,professionalDisease,workAccident,accident,other
     */
    enum class Reason(val value: kotlin.String) {
        @JsonProperty(value = "Chimiotherapy") chimiotherapy("Chimiotherapy"),
        @JsonProperty(value = "ProfessionalDisease") professionalDisease("ProfessionalDisease"),
        @JsonProperty(value = "WorkAccident") workAccident("WorkAccident"),
        @JsonProperty(value = "Accident") accident("Accident"),
        @JsonProperty(value = "Other") other("Other");
    }
}

