/**
 * iCure Data Stack API Documentation
 *
 * The iCure Data Stack Application API is the native interface to iCure.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
package io.icure.kraken.client.models

import io.icure.kraken.client.models.CodeStubDto
import io.icure.kraken.client.models.PropertyStubDto

import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude


/**
 * This entity represents a group
 *
 * @param id The id of the group. We encourage using either a v4 UUID or a HL7 Id.
 * @param tags A tag is an item from a codification system that qualifies an entity as being member of a certain class, whatever the value it might have taken. If the tag qualifies the content of a field, it means that whatever the content of the field, the tag will always apply. For example, the label of a field is qualified using a tag. LOINC is a codification system typically used for tags.
 * @param superAdmin Whether the group has a super admin permission, originally set to no access.
 * @param properties Extra properties for the user. Those properties are typed (see class Property)
 * @param rev The revision of the group in the database, used for conflict management / optimistic locking.
 * @param deletionDate hard delete (unix epoch in ms) timestamp of the object. Filled automatically when deletePatient is called.
 * @param name Username for the group
 * @param password Password for the group access
 * @param servers List of servers accessible to the group
 * @param superGroup 
 */

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class GroupDto (

    /* The id of the group. We encourage using either a v4 UUID or a HL7 Id. */
    @field:JsonProperty("id")
    val id: kotlin.String,

    /* A tag is an item from a codification system that qualifies an entity as being member of a certain class, whatever the value it might have taken. If the tag qualifies the content of a field, it means that whatever the content of the field, the tag will always apply. For example, the label of a field is qualified using a tag. LOINC is a codification system typically used for tags. */
    @field:JsonProperty("tags")
    val tags: kotlin.collections.List<CodeStubDto> = emptyList(),

    /* Whether the group has a super admin permission, originally set to no access. */
    @field:JsonProperty("superAdmin")
    val superAdmin: kotlin.Boolean,

    /* Extra properties for the user. Those properties are typed (see class Property) */
    @field:JsonProperty("properties")
    val properties: kotlin.collections.List<PropertyStubDto> = emptyList(),

    /* The revision of the group in the database, used for conflict management / optimistic locking. */
    @field:JsonProperty("rev")
    val rev: kotlin.String? = null,

    /* hard delete (unix epoch in ms) timestamp of the object. Filled automatically when deletePatient is called. */
    @field:JsonProperty("deletionDate")
    val deletionDate: kotlin.Long? = null,

    /* Username for the group */
    @field:JsonProperty("name")
    val name: kotlin.String? = null,

    /* Password for the group access */
    @field:JsonProperty("password")
    val password: kotlin.String? = null,

    /* List of servers accessible to the group */
    @field:JsonProperty("servers")
    val servers: kotlin.collections.List<kotlin.String>? = null,

    @field:JsonProperty("superGroup")
    val superGroup: kotlin.String? = null

)

