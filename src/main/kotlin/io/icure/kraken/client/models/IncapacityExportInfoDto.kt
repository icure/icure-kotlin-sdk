/**
 * iCure Data Stack API Documentation
 *
 * The iCure Data Stack Application API is the native interface to iCure.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
package io.icure.kraken.client.models

import io.icure.kraken.client.models.AddressDto
import io.icure.kraken.client.models.HealthcarePartyDto
import io.icure.kraken.client.models.ServiceDto

import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
import com.github.pozo.KotlinBuilder


/**
 * 
 *
 * @param incapacityId 
 * @param notificationDate 
 * @param retraction 
 * @param dataset 
 * @param transactionType 
 * @param incapacityreason 
 * @param beginmoment 
 * @param endmoment 
 * @param outofhomeallowed 
 * @param incapWork 
 * @param incapSchool 
 * @param incapSwim 
 * @param incapSchoolsports 
 * @param incapHeavyphysicalactivity 
 * @param diagnoseServices 
 * @param jobstatus 
 * @param job 
 * @param occupationalDiseaseDeclDate 
 * @param accidentDate 
 * @param expectedbirthgivingDate 
 * @param maternityleaveBegin 
 * @param maternityleaveEnd 
 * @param hospitalisationBegin 
 * @param hospitalisationEnd 
 * @param contactPersonTel 
 * @param foreignStayBegin 
 * @param foreignStayEnd 
 * @param recipient 
 * @param comment 
 * @param hospital 
 * @param recoveryAddress 
 */

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@KotlinBuilder
data class IncapacityExportInfoDto (

    @field:JsonProperty("incapacityId")
    val incapacityId: kotlin.String,

    @field:JsonProperty("notificationDate")
    val notificationDate: kotlin.Long,

    @field:JsonProperty("retraction")
    val retraction: kotlin.Boolean,

    @field:JsonProperty("dataset")
    val dataset: kotlin.String,

    @field:JsonProperty("transactionType")
    val transactionType: kotlin.String,

    @field:JsonProperty("incapacityreason")
    val incapacityreason: kotlin.String,

    @field:JsonProperty("beginmoment")
    val beginmoment: kotlin.Long,

    @field:JsonProperty("endmoment")
    val endmoment: kotlin.Long,

    @field:JsonProperty("outofhomeallowed")
    val outofhomeallowed: kotlin.Boolean,

    @field:JsonProperty("incapWork")
    val incapWork: kotlin.Boolean,

    @field:JsonProperty("incapSchool")
    val incapSchool: kotlin.Boolean,

    @field:JsonProperty("incapSwim")
    val incapSwim: kotlin.Boolean,

    @field:JsonProperty("incapSchoolsports")
    val incapSchoolsports: kotlin.Boolean,

    @field:JsonProperty("incapHeavyphysicalactivity")
    val incapHeavyphysicalactivity: kotlin.Boolean,

    @field:JsonProperty("diagnoseServices")
    val diagnoseServices: kotlin.collections.List<ServiceDto> = emptyList(),

    @field:JsonProperty("jobstatus")
    val jobstatus: kotlin.String,

    @field:JsonProperty("job")
    val job: kotlin.String,

    @field:JsonProperty("occupationalDiseaseDeclDate")
    val occupationalDiseaseDeclDate: kotlin.Long,

    @field:JsonProperty("accidentDate")
    val accidentDate: kotlin.Long,

    @field:JsonProperty("expectedbirthgivingDate")
    val expectedbirthgivingDate: kotlin.Long,

    @field:JsonProperty("maternityleaveBegin")
    val maternityleaveBegin: kotlin.Long,

    @field:JsonProperty("maternityleaveEnd")
    val maternityleaveEnd: kotlin.Long,

    @field:JsonProperty("hospitalisationBegin")
    val hospitalisationBegin: kotlin.Long,

    @field:JsonProperty("hospitalisationEnd")
    val hospitalisationEnd: kotlin.Long,

    @field:JsonProperty("contactPersonTel")
    val contactPersonTel: kotlin.String,

    @field:JsonProperty("foreignStayBegin")
    val foreignStayBegin: kotlin.Long,

    @field:JsonProperty("foreignStayEnd")
    val foreignStayEnd: kotlin.Long,

    @field:JsonProperty("recipient")
    val recipient: HealthcarePartyDto? = null,

    @field:JsonProperty("comment")
    val comment: kotlin.String? = null,

    @field:JsonProperty("hospital")
    val hospital: HealthcarePartyDto? = null,

    @field:JsonProperty("recoveryAddress")
    val recoveryAddress: AddressDto? = null

)

