/**
 * iCure Cloud API Documentation
 *
 * Spring shop sample application
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
package io.icure.kraken.client.models


import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude


/**
 * 
 *
 * @param id 
 * @param dateCode 
 * @param logicalId 
 * @param label 
 * @param userId 
 * @param contactId 
 * @param serviceId 
 * @param tarificationId 
 * @param code 
 * @param paymentType 
 * @param paid 
 * @param totalAmount 
 * @param reimbursement 
 * @param patientIntervention 
 * @param doctorSupplement 
 * @param conventionAmount 
 * @param vat 
 * @param error 
 * @param `contract` 
 * @param contractDate 
 * @param units 
 * @param side 
 * @param timeOfDay 
 * @param eidReadingHour 
 * @param eidReadingValue 
 * @param override3rdPayerCode 
 * @param override3rdPayerReason 
 * @param transplantationCode 
 * @param prescriberNorm 
 * @param percentNorm 
 * @param prescriberNihii 
 * @param relatedCode 
 * @param prescriptionDate 
 * @param derogationMaxNumber 
 * @param prescriberSsin 
 * @param prescriberLastName 
 * @param prescriberFirstName 
 * @param prescriberCdHcParty 
 * @param locationNihii 
 * @param locationCdHcParty 
 * @param canceled 
 * @param accepted 
 * @param pending 
 * @param resent 
 * @param archived 
 * @param lost 
 * @param insuranceJustification 
 * @param cancelPatientInterventionReason 
 * @param status 
 * @param encryptedSelf The base64 encoded data of this object, formatted as JSON and encrypted in AES using the random master key from encryptionKeys.
 */

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class InvoicingCodeDto (

    @field:JsonProperty("id")
    val id: kotlin.String? = null,

    @field:JsonProperty("dateCode")
    val dateCode: kotlin.Long? = null,

    @field:JsonProperty("logicalId")
    val logicalId: kotlin.String? = null,

    @field:JsonProperty("label")
    val label: kotlin.String? = null,

    @field:JsonProperty("userId")
    val userId: kotlin.String? = null,

    @field:JsonProperty("contactId")
    val contactId: kotlin.String? = null,

    @field:JsonProperty("serviceId")
    val serviceId: kotlin.String? = null,

    @field:JsonProperty("tarificationId")
    val tarificationId: kotlin.String? = null,

    @field:JsonProperty("code")
    val code: kotlin.String? = null,

    @field:JsonProperty("paymentType")
    val paymentType: InvoicingCodeDto.PaymentType? = null,

    @field:JsonProperty("paid")
    val paid: kotlin.Double? = null,

    @field:JsonProperty("totalAmount")
    val totalAmount: kotlin.Double? = null,

    @field:JsonProperty("reimbursement")
    val reimbursement: kotlin.Double? = null,

    @field:JsonProperty("patientIntervention")
    val patientIntervention: kotlin.Double? = null,

    @field:JsonProperty("doctorSupplement")
    val doctorSupplement: kotlin.Double? = null,

    @field:JsonProperty("conventionAmount")
    val conventionAmount: kotlin.Double? = null,

    @field:JsonProperty("vat")
    val vat: kotlin.Double? = null,

    @field:JsonProperty("error")
    val error: kotlin.String? = null,

    @field:JsonProperty("contract")
    val `contract`: kotlin.String? = null,

    @field:JsonProperty("contractDate")
    val contractDate: kotlin.Long? = null,

    @field:JsonProperty("units")
    val units: kotlin.Int? = null,

    @field:JsonProperty("side")
    val side: kotlin.Int? = null,

    @field:JsonProperty("timeOfDay")
    val timeOfDay: kotlin.Int? = null,

    @field:JsonProperty("eidReadingHour")
    val eidReadingHour: kotlin.Int? = null,

    @field:JsonProperty("eidReadingValue")
    val eidReadingValue: kotlin.String? = null,

    @field:JsonProperty("override3rdPayerCode")
    val override3rdPayerCode: kotlin.Int? = null,

    @field:JsonProperty("override3rdPayerReason")
    val override3rdPayerReason: kotlin.String? = null,

    @field:JsonProperty("transplantationCode")
    val transplantationCode: kotlin.Int? = null,

    @field:JsonProperty("prescriberNorm")
    val prescriberNorm: kotlin.Int? = null,

    @field:JsonProperty("percentNorm")
    val percentNorm: kotlin.Int? = null,

    @field:JsonProperty("prescriberNihii")
    val prescriberNihii: kotlin.String? = null,

    @field:JsonProperty("relatedCode")
    val relatedCode: kotlin.String? = null,

    @field:JsonProperty("prescriptionDate")
    val prescriptionDate: kotlin.Long? = null,

    @field:JsonProperty("derogationMaxNumber")
    val derogationMaxNumber: kotlin.Int? = null,

    @field:JsonProperty("prescriberSsin")
    val prescriberSsin: kotlin.String? = null,

    @field:JsonProperty("prescriberLastName")
    val prescriberLastName: kotlin.String? = null,

    @field:JsonProperty("prescriberFirstName")
    val prescriberFirstName: kotlin.String? = null,

    @field:JsonProperty("prescriberCdHcParty")
    val prescriberCdHcParty: kotlin.String? = null,

    @field:JsonProperty("locationNihii")
    val locationNihii: kotlin.String? = null,

    @field:JsonProperty("locationCdHcParty")
    val locationCdHcParty: kotlin.String? = null,

    @field:JsonProperty("canceled")
    val canceled: kotlin.Boolean? = null,

    @field:JsonProperty("accepted")
    val accepted: kotlin.Boolean? = null,

    @field:JsonProperty("pending")
    val pending: kotlin.Boolean? = null,

    @field:JsonProperty("resent")
    val resent: kotlin.Boolean? = null,

    @field:JsonProperty("archived")
    val archived: kotlin.Boolean? = null,

    @field:JsonProperty("lost")
    val lost: kotlin.Boolean? = null,

    @field:JsonProperty("insuranceJustification")
    val insuranceJustification: kotlin.Int? = null,

    @field:JsonProperty("cancelPatientInterventionReason")
    val cancelPatientInterventionReason: kotlin.Int? = null,

    @field:JsonProperty("status")
    val status: kotlin.Long? = null,

    /* The base64 encoded data of this object, formatted as JSON and encrypted in AES using the random master key from encryptionKeys. */
    @field:JsonProperty("encryptedSelf")
    val encryptedSelf: kotlin.String? = null

) {

    /**
     * 
     *
     * Values: cash,wired,insurance,creditcard,debitcard,paypal,bitcoin,other
     */
    enum class PaymentType(val value: kotlin.String) {
        @JsonProperty(value = "cash") cash("cash"),
        @JsonProperty(value = "wired") wired("wired"),
        @JsonProperty(value = "insurance") insurance("insurance"),
        @JsonProperty(value = "creditcard") creditcard("creditcard"),
        @JsonProperty(value = "debitcard") debitcard("debitcard"),
        @JsonProperty(value = "paypal") paypal("paypal"),
        @JsonProperty(value = "bitcoin") bitcoin("bitcoin"),
        @JsonProperty(value = "other") other("other");
    }
}

