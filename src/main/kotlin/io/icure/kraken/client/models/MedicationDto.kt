/**
 * iCure Data Stack API Documentation
 *
 * The iCure Data Stack Application API is the native interface to iCure.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
package io.icure.kraken.client.models

import io.icure.kraken.client.models.CodeStubDto
import io.icure.kraken.client.models.DurationDto
import io.icure.kraken.client.models.MedicinalproductDto
import io.icure.kraken.client.models.ParagraphAgreementDto
import io.icure.kraken.client.models.RegimenItemDto
import io.icure.kraken.client.models.RenewalDto
import io.icure.kraken.client.models.SubstanceproductDto
import io.icure.kraken.client.models.SuspensionDto

import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude


/**
 * The details of prescribed or suggested medication
 *
 * @param compoundPrescription 
 * @param substanceProduct 
 * @param medicinalProduct 
 * @param numberOfPackages 
 * @param batch 
 * @param instructionForPatient 
 * @param instructionForReimbursement 
 * @param commentForDelivery 
 * @param drugRoute 
 * @param temporality 
 * @param frequency 
 * @param reimbursementReason 
 * @param substitutionAllowed 
 * @param beginMoment 
 * @param endMoment 
 * @param deliveryMoment 
 * @param endExecutionMoment 
 * @param duration 
 * @param renewal 
 * @param knownUsage 
 * @param regimen 
 * @param posology 
 * @param agreements 
 * @param medicationSchemeIdOnSafe 
 * @param medicationSchemeSafeVersion 
 * @param medicationSchemeTimeStampOnSafe 
 * @param medicationSchemeDocumentId 
 * @param safeIdName 
 * @param idOnSafes 
 * @param timestampOnSafe 
 * @param changeValidated 
 * @param newSafeMedication 
 * @param medicationUse 
 * @param beginCondition 
 * @param endCondition 
 * @param origin 
 * @param medicationChanged 
 * @param posologyChanged 
 * @param suspension 
 * @param prescriptionRID 
 * @param status 
 */

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class MedicationDto (

    @field:JsonProperty("compoundPrescription")
    val compoundPrescription: kotlin.String? = null,

    @field:JsonProperty("substanceProduct")
    val substanceProduct: SubstanceproductDto? = null,

    @field:JsonProperty("medicinalProduct")
    val medicinalProduct: MedicinalproductDto? = null,

    @field:JsonProperty("numberOfPackages")
    val numberOfPackages: kotlin.Int? = null,

    @field:JsonProperty("batch")
    val batch: kotlin.String? = null,

    @field:JsonProperty("instructionForPatient")
    val instructionForPatient: kotlin.String? = null,

    @field:JsonProperty("instructionForReimbursement")
    val instructionForReimbursement: kotlin.String? = null,

    @field:JsonProperty("commentForDelivery")
    val commentForDelivery: kotlin.String? = null,

    @field:JsonProperty("drugRoute")
    val drugRoute: kotlin.String? = null,

    @field:JsonProperty("temporality")
    val temporality: kotlin.String? = null,

    @field:JsonProperty("frequency")
    val frequency: CodeStubDto? = null,

    @field:JsonProperty("reimbursementReason")
    val reimbursementReason: CodeStubDto? = null,

    @field:JsonProperty("substitutionAllowed")
    val substitutionAllowed: kotlin.Boolean? = null,

    @field:JsonProperty("beginMoment")
    val beginMoment: kotlin.Long? = null,

    @field:JsonProperty("endMoment")
    val endMoment: kotlin.Long? = null,

    @field:JsonProperty("deliveryMoment")
    val deliveryMoment: kotlin.Long? = null,

    @field:JsonProperty("endExecutionMoment")
    val endExecutionMoment: kotlin.Long? = null,

    @field:JsonProperty("duration")
    val duration: DurationDto? = null,

    @field:JsonProperty("renewal")
    val renewal: RenewalDto? = null,

    @field:JsonProperty("knownUsage")
    val knownUsage: kotlin.Boolean? = null,

    @field:JsonProperty("regimen")
    val regimen: kotlin.collections.List<RegimenItemDto>? = null,

    @field:JsonProperty("posology")
    val posology: kotlin.String? = null,

    @field:JsonProperty("agreements")
    val agreements: kotlin.collections.Map<kotlin.String, ParagraphAgreementDto>? = null,

    @field:JsonProperty("medicationSchemeIdOnSafe")
    val medicationSchemeIdOnSafe: kotlin.String? = null,

    @field:JsonProperty("medicationSchemeSafeVersion")
    val medicationSchemeSafeVersion: kotlin.Int? = null,

    @field:JsonProperty("medicationSchemeTimeStampOnSafe")
    val medicationSchemeTimeStampOnSafe: kotlin.Long? = null,

    @field:JsonProperty("medicationSchemeDocumentId")
    val medicationSchemeDocumentId: kotlin.String? = null,

    @field:JsonProperty("safeIdName")
    val safeIdName: kotlin.String? = null,

    @field:JsonProperty("idOnSafes")
    val idOnSafes: kotlin.String? = null,

    @field:JsonProperty("timestampOnSafe")
    val timestampOnSafe: kotlin.Long? = null,

    @field:JsonProperty("changeValidated")
    val changeValidated: kotlin.Boolean? = null,

    @field:JsonProperty("newSafeMedication")
    val newSafeMedication: kotlin.Boolean? = null,

    @field:JsonProperty("medicationUse")
    val medicationUse: kotlin.String? = null,

    @field:JsonProperty("beginCondition")
    val beginCondition: kotlin.String? = null,

    @field:JsonProperty("endCondition")
    val endCondition: kotlin.String? = null,

    @field:JsonProperty("origin")
    val origin: kotlin.String? = null,

    @field:JsonProperty("medicationChanged")
    val medicationChanged: kotlin.Boolean? = null,

    @field:JsonProperty("posologyChanged")
    val posologyChanged: kotlin.Boolean? = null,

    @field:JsonProperty("suspension")
    val suspension: kotlin.collections.List<SuspensionDto>? = null,

    @field:JsonProperty("prescriptionRID")
    val prescriptionRID: kotlin.String? = null,

    @field:JsonProperty("status")
    val status: kotlin.Int? = null

)

