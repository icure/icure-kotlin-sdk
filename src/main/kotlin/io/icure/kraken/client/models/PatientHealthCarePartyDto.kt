/**
 * iCure Data Stack API Documentation
 *
 * The iCure Data Stack Application API is the native interface to iCure. This version is obsolete, please use v2.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
package io.icure.kraken.client.models

import io.icure.kraken.client.models.ReferralPeriodDto

import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
import com.github.pozo.KotlinBuilder


/**
 * One or several periods of care by an hcp for this patient
 *
 * @param sendFormats Preferred format of exchange for diverse means of communication
 * @param referralPeriods Time periods
 * @param referral 
 * @param type Type of care/relationship.
 * @param healthcarePartyId UUID of the hcp.
 * @param encryptedSelf The base64 encoded data of this object, formatted as JSON and encrypted in AES using the random master key from encryptionKeys.
 */

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@KotlinBuilder
data class PatientHealthCarePartyDto (

    /* Preferred format of exchange for diverse means of communication */
    @field:JsonProperty("sendFormats")
    val sendFormats: kotlin.collections.Map<kotlin.String, kotlin.String> = mapOf(),

    /* Time periods */
    @field:JsonProperty("referralPeriods")
    val referralPeriods: kotlin.collections.List<ReferralPeriodDto> = listOf(),

    @field:JsonProperty("referral")
    @Deprecated(message = "This property is deprecated.")
    val referral: kotlin.Boolean = false,

    /* Type of care/relationship. */
    @field:JsonProperty("type")
    val type: PatientHealthCarePartyDto.Type? = null,

    /* UUID of the hcp. */
    @field:JsonProperty("healthcarePartyId")
    val healthcarePartyId: kotlin.String? = null,

    /* The base64 encoded data of this object, formatted as JSON and encrypted in AES using the random master key from encryptionKeys. */
    @field:JsonProperty("encryptedSelf")
    val encryptedSelf: kotlin.String? = null

) {

    /**
     * Type of care/relationship.
     *
     * Values: doctor,referral,medicalhouse,retirementhome,hospital,other,referringphysician,referralHospital
     */
    enum class Type(val value: kotlin.String) {
        @JsonProperty(value = "doctor") doctor("doctor"),
        @JsonProperty(value = "referral") referral("referral"),
        @JsonProperty(value = "medicalhouse") medicalhouse("medicalhouse"),
        @JsonProperty(value = "retirementhome") retirementhome("retirementhome"),
        @JsonProperty(value = "hospital") hospital("hospital"),
        @JsonProperty(value = "other") other("other"),
        @JsonProperty(value = "referringphysician") referringphysician("referringphysician"),
        @JsonProperty(value = "referralHospital") referralHospital("referralHospital");
    }
}

